{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","currentCategory","user","usersFromServer","currentUser","App","useState","selectedUserName","setSelectedUserName","query","setQuery","selectedCategory","setSelectedCategory","sortBy","setSortBy","sortByReverse","setSortByReverse","visibleProducts","currentProducts","filter","toLowerCase","includes","trim","length","sort","a","b","localeCompare","reverse","getVisibleProducts","setSortByPeram","param","className","href","cn","onClick","type","placeholder","value","onChange","event","target","categoryTitle","prevValue","val","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04c7da7b.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(currentCategory => currentCategory.id === product.categoryId);\n  const user = usersFromServer\n    .find(currentUser => currentUser.id === category.ownerId);\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nfunction getVisibleProducts(\n  currentProducts,\n  selectedUserName,\n  query,\n  selectedCategory,\n  sortBy,\n  sortByReverse,\n) {\n  let visibleProducts = [...currentProducts];\n\n  if (selectedUserName) {\n    visibleProducts = visibleProducts\n      .filter(product => product.user.name === selectedUserName);\n  }\n\n  if (query) {\n    visibleProducts = visibleProducts\n      .filter(product => product.name.toLowerCase()\n        .includes(query.trim().toLowerCase()));\n  }\n\n  if (selectedCategory.length) {\n    visibleProducts = visibleProducts\n      .filter(product => selectedCategory.includes(product.category.title));\n  }\n\n  if (sortBy) {\n    switch (sortBy) {\n      case 'ID':\n        visibleProducts.sort((a, b) => a.id - b.id);\n        break;\n      case 'Product':\n        visibleProducts\n          .sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      case 'Category':\n        visibleProducts\n          .sort((a, b) => (\n            a.category.title.localeCompare(b.category.title)));\n        break;\n      case 'User':\n        visibleProducts\n          .sort((a, b) => a.user.name.localeCompare(b.user.name));\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (sortByReverse) {\n    visibleProducts.reverse();\n  }\n\n  return visibleProducts;\n}\n\nexport const App = () => {\n  const [selectedUserName, setSelectedUserName] = useState('');\n  const [query, setQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState([]);\n  const [sortBy, setSortBy] = useState('');\n  const [sortByReverse, setSortByReverse] = useState(false);\n\n  const visibleProducts = getVisibleProducts(\n    products,\n    selectedUserName,\n    query,\n    selectedCategory,\n    sortBy,\n    sortByReverse,\n  );\n\n  function handleResetAll() {\n    setQuery('');\n    setSelectedUserName('');\n    setSelectedCategory([]);\n  }\n\n  function handleCategory(categoryTitle) {\n    return () => {\n      if (selectedCategory.includes(categoryTitle)) {\n        setSelectedCategory(prevValue => prevValue\n          .filter(val => val !== categoryTitle));\n      } else {\n        setSelectedCategory(prevValue => [\n          ...prevValue,\n          categoryTitle,\n        ]);\n      }\n    };\n  }\n\n  function setSortByPeram(param) {\n    if (sortByReverse) {\n      setSortByReverse(!sortByReverse);\n      setSortBy('');\n\n      return;\n    }\n\n    if (sortBy === param) {\n      setSortByReverse(!sortByReverse);\n    }\n\n    setSortBy(param);\n  }\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={cn({ 'is-active': !selectedUserName })}\n                onClick={() => setSelectedUserName('')}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  key={user.id}\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  className={\n                    cn({ 'is-active': user.name === selectedUserName })\n                  }\n                  onClick={() => setSelectedUserName(user.name)}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={\n                    event => setQuery(event.target.value)\n                  }\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {!!query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={cn('button is-success mr-6', {\n                  'is-outlined': selectedCategory.length,\n                })}\n                onClick={() => setSelectedCategory([])}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={cn('button mr-2 my-1', {\n                    'is-info': selectedCategory.includes(category.title),\n                  })}\n                  href=\"#/\"\n                  onClick={handleCategory(category.title)}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={handleResetAll}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {visibleProducts.length ? (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => setSortByPeram('ID')}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn('fas', {\n                              'fa-sort': sortBy !== 'ID',\n                              'fa-sort-down': sortBy === 'ID' && !sortByReverse,\n                              'fa-sort-up': sortBy === 'ID' && sortByReverse,\n                            })}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => setSortByPeram('Product')}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn('fas', {\n                              'fa-sort': sortBy !== 'Product',\n                              'fa-sort-down':\n                              sortBy === 'Product' && !sortByReverse,\n                              'fa-sort-up':\n                              sortBy === 'Product' && sortByReverse,\n                            })}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => setSortByPeram('Category')}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn('fas', {\n                              'fa-sort': sortBy !== 'Category',\n                              'fa-sort-down':\n                              sortBy === 'Category' && !sortByReverse,\n                              'fa-sort-up':\n                              sortBy === 'Category' && sortByReverse,\n                            })}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => setSortByPeram('User')}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn('fas', {\n                              'fa-sort': sortBy !== 'User',\n                              'fa-sort-down':\n                              sortBy === 'User' && !sortByReverse,\n                              'fa-sort-up':\n                              sortBy === 'User' && sortByReverse,\n                            })}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {visibleProducts.map(product => (\n                  <tr key={product.id} data-cy=\"Product\">\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      {product.id}\n                    </td>\n\n                    <td data-cy=\"ProductName\">{product.name}</td>\n\n                    <td data-cy=\"ProductCategory\">{`${product.category.icon} - ${product.category.title}`}</td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className={\n                        cn('has-text-link',\n                          {\n                            'has-text-link': product.user.sex === 'm',\n                            'has-text-danger': product.user.sex === 'f',\n                          })\n                      }\n                    >\n                      {product.user.name}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}